networks:
  muse:
    driver: bridge

services:
  muse-postgres:
    image: postgres:16.4
    container_name: "muse-postgres-${MUSE_STAGE}"
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_DSN: ${POSTGRES_DSN}
    volumes:
      - /var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - muse
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    profiles:
      - local
      - dev
      - staging
      - prod
    labels:
      - io.portainer.accesscontrol.public

  muse-server:
    image: "${DOCKER_REPOSITORY}/muse-server:${MUSE_STAGE}-${MUSE_GIT_COMMIT_HASH}"
    container_name: "muse-server-${MUSE_STAGE}"
    ports:
      - ${SERVER_PORT}:8080
      - ${SERVER_DEBUG_PORT}:5005
    environment:
      - MUSE_JWT_SECRET_KEY
      - SERVER_SPRING_PROFILE
      - CLIENT_URL
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_DSN
      - CLIENT_PORT
    networks:
      - muse
    profiles:
      - local
      - dev
      - staging
      - prod
    depends_on:
      muse-postgres:
        condition: service_healthy
    labels:
      - io.portainer.accesscontrol.public

#  muse-client:
#    image: "${DOCKER_REPOSITORY}/muse-client:${MUSE_STAGE}-${MUSE_GIT_COMMIT_HASH}"
#    container_name: "muse-client-${MUSE_STAGE}"
#    ports:
#      - ${CLIENT_PORT}:80
#    environment:
#      - SERVER_API_URL
#    networks:
#      - muse
#    profiles:
#      - local
#      - dev
#      - staging
#      - prod
#    labels:
#      - io.portainer.accesscontrol.public
#
#  muse-client-dev:
#    image: "${DOCKER_REPOSITORY}/muse-client-dev:${MUSE_STAGE}-${MUSE_GIT_COMMIT_HASH}"
#    container_name: "muse-client-dev-${MUSE_STAGE}"
#    ports:
#      - ${CLIENT_DEV_PORT}:3000
#    volumes:
#      - ./../../client:/muse-client-dev
#      - ./node-modules:/muse-client-dev/node-modules
#    networks:
#      - muse
#    profiles:
#      - local

  muse-jaeger:
    image: jaegertracing/all-in-one:1.60
    ports:
      - "${OPEN_TELEMETERY_COLLECTOR_PORT}:4317"
      - "${JAEGER_UI_PORT}:16686"
    networks:
      - muse
    profiles:
      - local
      - dev
      - staging
      - prod

##  portainer:
#    image: portainer/portainer-ce:linux-amd64-2.20.3-alpine
#    container_name: portainer
#    environment:
#      - TZ=Europe/Moscow
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - ./portainer_data:/data
#    ports:
#      - "8000:8000"
#      - "9443:9443"
#    restart: always
#    networks:
#      - muse
