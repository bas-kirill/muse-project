networks:
  muse:
    driver: bridge

services:
  postgres:
    image: postgres:16.4
    container_name: muse-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_DSN: ${POSTGRES_DSN}
    volumes:
      - /var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - muse
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  muse-server:
    image: "${MUSE_SERVER_IMAGE:-muse-server}"
    container_name: muse-server
    ports:
      - ${SERVER_PORT}:8080
      - ${SERVER_DEBUG_PORT}:5005
    environment:
      - MUSE_JWT_SECRET_KEY
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_DSN
    networks:
      - muse
    depends_on:
      postgres:
        condition: service_healthy

  muse-client:
    image: "${MUSE_CLIENT_IMAGE:-muse-client}"
    container_name: muse-client
    ports:
      - ${CLIENT_PORT}:80
    networks:
      - muse

  muse-client-dev:
    image: "${MUSE_CLIENT_DEV_IMAGE:-muse-client-dev}"
    container_name: muse-client-dev
    ports:
      - ${CLIENT_DEV_PORT}:3000
    volumes:
      - ./../../client:/muse-client-dev
      - ./node-modules:/muse-client-dev/node-modules
    networks:
      - muse

#  portainer:
#    image: portainer/portainer-ce:linux-amd64-2.20.3-alpine
#    container_name: portainer
#    environment:
#      - TZ=Europe/Moscow
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - ./portainer_data:/data
#    ports:
#      - "8000:8000"
#      - "9443:9443"
#    restart: always
#    networks:
#      - muse
