openapi: 3.0.0
info:
  description: Basic Material
  version: 1.0.0
  title: Country
  contact:
    name: Kirill B
    email: baskirill.an@gmail.com
servers:
  - url: http://localhost:{port}/{basePath}
    description: Local server (uses local data)
    variables:
      port:
        default: '8080'
        enum:
          - '8080'
          - '8000'
tags:
  - name: getCountries
    description: Get Countries
    x-displayName: getCountries
  - name: addFavorite
    description: Add Favorite
    x-displayName: addFavorite
  - name: listFavorite
    description: List Favorite
    x-displayName: listFavorite
  - name: removeFavorite
    description: Remove Favorite
    x-displayName: removeFavorite
  - name: createInstrument
    description: Create Instrument
    x-displayName: createInstrument
  - name: deleteInstrumentById
    description: Delete Instrument by ID
    x-displayName: deleteInstrumentById
  - name: editInstrument
    description: Edit Instrument
    x-displayName: editInstrument
  - name: getInstrumentBasicMaterials
    description: Get Instrument Basic Materials
    x-displayName: getInstrumentBasicMaterials
  - name: getInstrumentById
    description: Get Instrument by ID
    x-displayName: getInstrumentById
  - name: getInstrumentPhoto
    description: Get Instrument Photo
    x-displayName: getInstrumentPhoto
  - name: getInstrumentTypes
    description: Get Instrument Types
    x-displayName: getInstrumentTypes
  - name: getInstrumentsByCriteria
    description: Get Instruments by Criteria
    x-displayName: getInstrumentsByCriteria
  - name: getInstrumentsByCriteriaPaginated
    description: Get Instruments by Criteria Paginated
    x-displayName: getInstrumentsByCriteriaPaginated
  - name: basicLogin
    description: Everything about user
    x-displayName: basicLogin
  - name: logout
    description: Logout
    x-displayName: logout
  - name: getManufacturers
    description: Get Manufacturers
    x-displayName: getManufacturers
  - name: getUserProfile
    description: Get User Profile
    x-displayName: getUserProfile
  - name: userRegistration
    description: User Registration
    x-displayName: userRegistration
paths:
  /api/countries:
    get:
      description: Get Countries
      summary: Get Countries
      operationId: getCountries
      tags:
        - getCountries
      responses:
        '200':
          description: Country
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCountriesResponse'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/favorite/add:
    post:
      description: Add Favorite
      summary: Add Favorite
      operationId: addFavorite
      tags:
        - addFavorite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstrumentId'
        required: true
      responses:
        '200':
          description: Instrument Details
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/favorite/list:
    get:
      description: List Favorite
      summary: List Favorite
      operationId: listFavorite
      tags:
        - listFavorite
      responses:
        '200':
          description: Instrument Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFavoriteResponse'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/favorite/remove:
    post:
      description: Remove Favorite
      summary: Remove Favorite
      operationId: removeFavorite
      tags:
        - removeFavorite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstrumentId'
        required: true
      responses:
        '200':
          description: Instrument Details
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/instrument/create:
    post:
      description: Create Instrument
      summary: Create Instrument
      operationId: createInstrument
      tags:
        - createInstrument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstrumentRequestBody'
        required: true
      responses:
        '200':
          description: Instrument Types
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/instrument/{instrumentId}/delete:
    get:
      description: Get Instrument Types
      summary: Get Instrument Types
      operationId: deleteInstrumentById
      tags:
        - deleteInstrumentById
      parameters:
        - $ref: '#/components/parameters/instrumentId'
      responses:
        '200':
          description: Instrument Types
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/instrument/edit:
    post:
      description: Edit Instrument
      summary: Edit Instrument
      operationId: editInstrument
      tags:
        - editInstrument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditInstrumentRequestBody'
        required: true
      responses:
        '200':
          description: Instrument Types
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/instrument/materials:
    get:
      description: Get Instrument Basic Materials
      summary: Get Instrument Basic Materials
      operationId: getInstrumentBasicMaterials
      tags:
        - getInstrumentBasicMaterials
      responses:
        '200':
          description: Instrument Basic Materials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstrumentBasicMaterialsResponse'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/instrument/{instrumentId}:
    get:
      description: Get Instrument by ID
      summary: Get Instrument by ID
      operationId: getInstrumentById
      tags:
        - getInstrumentById
      parameters:
        - $ref: '#/components/parameters/instrumentId'
      responses:
        '200':
          description: Instrument Detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentDetail'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/instrument/photo/{instrumentId}:
    get:
      description: Get Instrument Photo
      summary: Get Instrument Photo
      operationId: getInstrumentPhoto
      tags:
        - getInstrumentPhoto
      parameters:
        - $ref: '#/components/parameters/instrumentId'
      responses:
        '200':
          description: Instrument Types
          content:
            image/*:
              schema:
                $ref: '#/components/schemas/InstrumentPhoto'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/instrument/types:
    get:
      description: Get Instrument Types
      summary: Get Instrument Types
      operationId: getInstrumentTypes
      tags:
        - getInstrumentTypes
      responses:
        '200':
          description: Instrument Types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstrumentTypesResponse'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/instruments:
    post:
      description: Get Instruments by Criteria
      summary: Get Instruments by Criteria
      operationId: getInstrumentsByCriteria
      tags:
        - getInstrumentsByCriteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstrumentsByCriteriaRequestBody'
        required: true
      responses:
        '200':
          description: Instrument Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstrumentsByCriteriaResponse'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/instruments/paginated:
    post:
      description: Get Instruments by Criteria Paginated
      summary: Get Instruments by Criteria Paginated
      operationId: getInstrumentsByCriteriaPaginated
      tags:
        - getInstrumentsByCriteriaPaginated
      parameters:
        - name: page_size
          in: query
          description: Page Size
          required: true
          schema:
            type: integer
            format: int32
        - name: page_number
          in: query
          description: Page Number (1-based enumeration)
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstrumentsByCriteriaRequestBody'
        required: true
      responses:
        '200':
          description: Instrument Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstrumentByCriteriaPageResponse'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/auth/login:
    post:
      description: Basic Authentication
      summary: Basic Login
      operationId: basicLogin
      tags:
        - basicLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameAndPasswordRequestBody'
        required: true
      responses:
        '200':
          description: Profile Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/auth/logout:
    post:
      description: Logout Endpoint
      summary: Logout Endpoint
      operationId: logout
      tags:
        - logout
      responses:
        '200':
          description: Profile Details
          content:
            application/json:
              schema:
                type: object
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/manufacturer:
    get:
      description: Get Manufacturers
      summary: Get Manufacturers
      operationId: getManufacturers
      tags:
        - getManufacturers
      responses:
        '200':
          description: Manufacturers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManufacturersResponse'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/profile:
    get:
      description: Get User Profile
      summary: Get Profile Info
      operationId: getProfile
      tags:
        - getUserProfile
      responses:
        '200':
          description: Profile Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDetails'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /api/registration:
    post:
      description: Register User
      summary: User Registration
      operationId: userRegistration
      tags:
        - userRegistration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        required: true
      responses:
        '200':
          description: User Registration
          content:
            application/json:
              schema:
                type: object
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
components:
  schemas:
    BasicMaterial:
      type: object
      required:
        - basic_material
      properties:
        basic_material:
          type: string
          example: WOOD
    ClientError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error description
        cause:
          type: string
          description: Exception stack trace
      example:
        message: Client Error
        cause: Client Error
    Country:
      type: object
      required:
        - country
      properties:
        country:
          type: string
          example: CYPRUS
    InstrumentDetail:
      type: object
      required:
        - instrument_id
        - instrument_name
        - instrument_type
        - manufacturer_name
        - manufacturer_date
        - release_date
        - country
        - basic_materials
      properties:
        instrument_id:
          $ref: '#/components/schemas/InstrumentId'
        instrument_name:
          $ref: '#/components/schemas/InstrumentName'
        instrument_type:
          $ref: '#/components/schemas/InstrumentType'
        manufacturer_name:
          $ref: '#/components/schemas/ManufacturerName'
        manufacturer_date:
          $ref: '#/components/schemas/ManufactureDate'
        release_date:
          $ref: '#/components/schemas/ReleaseDate'
        country:
          $ref: '#/components/schemas/Country'
        basic_materials:
          type: array
          items:
            $ref: '#/components/schemas/BasicMaterial'
    InstrumentId:
      type: object
      required:
        - instrument_id
      properties:
        instrument_id:
          type: integer
          format: int64
          example: 1
    InstrumentName:
      type: object
      required:
        - instrument_name
      properties:
        instrument_name:
          type: string
          example: Fender Stratocaster
    InstrumentType:
      type: object
      required:
        - instrument_type
      properties:
        instrument_type:
          type: string
          example: STRINGED
    ManufacturerName:
      type: object
      required:
        - manufacturer_name
      properties:
        manufacturer_name:
          type: string
          example: STRINGED
    ManufactureDate:
      type: object
      required:
        - manufacture_date
      properties:
        manufacture_date:
          type: string
          format: date
          example: '1998-01-01'
    ReleaseDate:
      type: object
      required:
        - release_date
      properties:
        release_date:
          type: string
          format: date
          example: '1998-01-01'
    InstrumentPhoto:
      type: object
      required:
        - photo
      properties:
        photo:
          type: string
          format: base64
    ServerError:
      type: object
      properties:
        message:
          type: string
          description: A description of the error
        cause:
          type: string
          description: Exception stack trace
      example:
        message: Internal Server Error. Please try again later.
        cause: Internal Server Error
    GetCountriesResponse:
      type: object
      required:
        - content
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Country'
    ListFavoriteResponse:
      type: object
      required:
        - content
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/InstrumentDetail'
    InstrumentDetailWithoutId:
      type: object
      required:
        - instrument_name
        - instrument_type
        - manufacturer_name
        - manufacturer_date
        - release_date
        - country
        - basic_materials
      properties:
        instrument_name:
          $ref: '#/components/schemas/InstrumentName'
        instrument_type:
          $ref: '#/components/schemas/InstrumentType'
        manufacturer_name:
          $ref: '#/components/schemas/ManufacturerName'
        manufacturer_date:
          $ref: '#/components/schemas/ManufactureDate'
        release_date:
          $ref: '#/components/schemas/ReleaseDate'
        country:
          $ref: '#/components/schemas/Country'
        basic_materials:
          type: array
          items:
            $ref: '#/components/schemas/BasicMaterial'
    CreateInstrumentRequestBody:
      type: object
      required:
        - instrument_detail
        - instrument_photo
      properties:
        instrument_detail:
          $ref: '#/components/schemas/InstrumentDetailWithoutId'
        instrument_photo:
          $ref: '#/components/schemas/InstrumentPhoto'
    EditInstrumentRequestBody:
      type: object
      required:
        - instrument_detail
        - instrument_photo
      properties:
        instrument_detail:
          $ref: '#/components/schemas/InstrumentDetail'
        instrument_photo:
          $ref: '#/components/schemas/InstrumentPhoto'
    GetInstrumentBasicMaterialsResponse:
      type: object
      required:
        - content
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/BasicMaterial'
    GetInstrumentTypesResponse:
      type: object
      required:
        - content
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/InstrumentType'
    GetInstrumentsByCriteriaResponse:
      type: object
      required:
        - content
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/InstrumentDetail'
    GetInstrumentsByCriteriaRequestBody:
      type: object
      properties:
        instrument_name:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/InstrumentName'
        instrument_types:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/InstrumentType'
        manufacturer_names:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/ManufacturerName'
        manufacture_date_from:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/ManufactureDate'
        manufacture_date_to:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/ManufactureDate'
        release_date_from:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/ReleaseDate'
        release_date_to:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/ReleaseDate'
        countries:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/Country'
        materials:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/BasicMaterial'
        instrument_ids:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/InstrumentId'
    GetInstrumentByCriteriaPageResponse:
      type: object
      required:
        - content
        - content_size
        - page_size
        - page_number
        - total_elements
        - total_pages
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/InstrumentDetail'
        content_size:
          type: integer
          format: int64
          description: The number of items in the content.
        page_size:
          type: integer
          format: int64
          description: The number of items per page.
        page_number:
          type: integer
          format: int64
          description: The current page number (0-based index).
        total_elements:
          type: integer
          format: int64
          description: The total number of elements across all pages.
        total_pages:
          type: integer
          format: int64
          description: The total number of pages.
    UsernameAndPasswordRequestBody:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    JwtResponse:
      type: object
      required:
        - jwt
      properties:
        jwt:
          type: string
    Manufacturer:
      type: object
      required:
        - manufacturer
      properties:
        manufacturer:
          type: string
    GetManufacturersResponse:
      type: object
      required:
        - content
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Manufacturer'
    ProfileDetails:
      type: object
      required:
        - username
        - role
        - full_name
      properties:
        username:
          type: string
        role:
          type: string
        full_name:
          type: string
    RegistrationRequest:
      type: object
      required:
        - full_name
        - login
        - password
      properties:
        full_name:
          type: string
        login:
          type: string
        password:
          type: string
  parameters:
    instrumentId:
      name: instrumentId
      in: path
      description: Instrument ID
      required: true
      schema:
        type: integer
        format: int64
x-tagGroups:
  - name: Get Countries
    tags:
      - getCountries
  - name: Add Favorite
    tags:
      - addFavorite
  - name: List Favorite
    tags:
      - listFavorite
  - name: Remove Favorite
    tags:
      - removeFavorite
  - name: Create Instrument
    tags:
      - createInstrument
  - name: Delete Instrument by ID
    tags:
      - deleteInstrumentById
  - name: Edit Instrument
    tags:
      - editInstrument
  - name: Get Instrument Basic Materials
    tags:
      - getInstrumentBasicMaterials
  - name: Get Instrument by ID
    tags:
      - getInstrumentById
  - name: Get Instrument Photo
    tags:
      - getInstrumentPhoto
  - name: Get Instrument Types
    tags:
      - getInstrumentTypes
  - name: Get Instruments by Criteria
    tags:
      - getInstrumentsByCriteria
  - name: Get Instruments by Criteria Paginated
    tags:
      - getInstrumentsByCriteriaPaginated
  - name: Basic Login
    tags:
      - basicLogin
  - name: Logout Endpoint
    tags:
      - logout
  - name: Get Manufacturers
    tags:
      - getManufacturers
  - name: Get Profile
    tags:
      - getUserProfile
  - name: Register User
    tags:
      - userRegistration
