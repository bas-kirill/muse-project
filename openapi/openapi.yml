openapi: 3.1.0
info:
  description: Client Error
  version: 1.0.0
  title: Client Error
  contact:
    name: Kirill B
    email: baskirill.an@gmail.com
servers:
  - url: http://localhost:{port}/{basePath}
    description: Local server (uses local data)
    variables:
      port:
        default: '8080'
        enum:
          - '8080'
          - '8000'
      basePath:
        default: api
tags:
  - name: addFavorite
    description: Add Favorite
    x-displayName: addFavorite
  - name: listFavorite
    description: List Favorite
    x-displayName: listFavorite
  - name: removeFavorite
    description: Remove Favorite
    x-displayName: removeFavorite
  - name: getInstrumentById
    description: Get Instrument by ID
    x-displayName: getInstrumentById
  - name: getInstrumentTypes
    description: Get Instrument Types
    x-displayName: getInstrumentTypes
  - name: getInstrumentsByCriteria
    description: Get Instruments by Criteria
    x-displayName: getInstrumentsByCriteria
  - name: getInstrumentsByCriteriaPaginated
    description: Get Instruments by Criteria Paginated
    x-displayName: getInstrumentsByCriteriaPaginated
  - name: basicLogin
    description: Everything about user
    x-displayName: basicLogin
  - name: getUserProfile
    description: Get User Profile
    x-displayName: getUserProfile
  - name: userRegistration
    description: User Registration
    x-displayName: userRegistration
paths:
  /favorite/add:
    post:
      description: Add Favorite
      summary: Add Favorite
      operationId: addFavorite
      tags:
        - addFavorite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFavoriteRequestBody'
        required: true
      responses:
        '200':
          description: Instrument Details
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /favorite/list:
    post:
      description: List Favorite
      summary: List Favorite
      operationId: listFavorite
      tags:
        - listFavorite
      responses:
        '200':
          description: Instrument Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFavoriteResponseBody'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /favorite/remove:
    post:
      description: Remove Favorite
      summary: Remove Favorite
      operationId: removeFavorite
      tags:
        - removeFavorite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFavoriteRequestBody'
        required: true
      responses:
        '200':
          description: Instrument Details
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /instrument/{instrumentId}:
    get:
      description: Get Instrument by ID
      summary: Get Instrument by ID
      operationId: getInstrumentById
      tags:
        - getInstrumentById
      parameters:
        - name: instrumentId
          in: path
          required: true
          description: Instrument ID
          schema:
            type: string
      responses:
        '200':
          description: Instrument Detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentDetail'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /instrument/types:
    get:
      description: Get Instrument Types
      summary: Get Instrument Types
      operationId: getInstrumentTypes
      tags:
        - getInstrumentTypes
      responses:
        '200':
          description: Instrument Types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstrumentTypesResponse'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /instruments:
    post:
      description: Get Instruments by Criteria
      summary: Get Instruments by Criteria
      operationId: getInstrumentsByCriteria
      tags:
        - getInstrumentsByCriteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstrumentCriteriaRequestBody'
        required: true
      responses:
        '200':
          description: Instrument Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstrumentsByCriteriaResponse'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /instruments/paginated:
    post:
      description: Get Instruments by Criteria Paginated
      summary: Get Instruments by Criteria Paginated
      operationId: getInstrumentsByCriteriaPaginated
      tags:
        - getInstrumentsByCriteriaPaginated
      parameters:
        - name: page_size
          in: query
          description: Page Size
          required: true
          schema:
            type: integer
            format: int32
        - name: page_number
          in: query
          description: Page Number (1-based enumeration)
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstrumentCriteriaRequestBody'
        required: true
      responses:
        '200':
          description: Instrument Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstrumentByCriteriaPageResponse'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /auth/login:
    post:
      description: Basic Authentication
      summary: Basic Login
      operationId: basicLogin
      tags:
        - basicLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameAndPasswordRequestBody'
        required: true
      responses:
        '200':
          description: Profile Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /profile:
    get:
      description: Get User Profile
      summary: Get Profile Info
      operationId: getProfile
      tags:
        - getUserProfile
      responses:
        '200':
          description: Profile Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDetailsResponse'
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /registration:
    post:
      description: Register User
      summary: User Registration
      operationId: userRegistration
      tags:
        - userRegistration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        required: true
      responses:
        '200':
          description: User Registration
          content:
            application/json:
              schema:
                type: object
        default:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
components:
  schemas:
    ClientError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error description
      example:
        message: Client Error
    InstrumentDetail:
      type: object
      required:
        - id
        - name
        - type
        - manufacturer
        - manufacturer_date
        - release_date
        - country
        - basic_materials
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
        manufacturer:
          type: string
        manufacturer_date:
          type: string
        release_date:
          type: string
        country:
          type: string
        basic_materials:
          type: array
          items:
            type: string
    ServerError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: A description of the error.
      example:
        message: Internal Server Error. Please try again later.
    AddFavoriteRequestBody:
      type: object
      required:
        - instrument_id
      properties:
        instrument_id:
          type: number
          format: int64
    ListFavoriteResponseBody:
      type: object
      required:
        - content
      properties:
        content:
          type: array
          items:
            type: >-
              ./../common/InstrumentDetail.yml#/components/schemas/InstrumentDetail
    RemoveFavoriteRequestBody:
      type: object
      required:
        - instrument_id
      properties:
        instrument_id:
          type: number
          format: int64
    GetInstrumentTypesResponse:
      type: object
      properties:
        content:
          type: array
          items:
            type: string
    GetInstrumentsByCriteriaResponse:
      type: object
      required:
        - content
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/InstrumentDetail'
    GetInstrumentCriteriaRequestBody:
      type: object
      properties:
        instrument_name:
          type: string
          example: Fender Stratocasto
        instrument_types:
          type: array
          items:
            type: string
            example: KEYBOARD
        manufacturer_names:
          type: array
          items:
            type: string
            example: Yamaha
        manufacture_date_from:
          type: string
          format: date
          example: '1998-01-01'
        manufacture_date_to:
          type: string
          format: date
          example: '1998-01-01'
        release_date_from:
          type: string
          format: date
          example: '1998-01-01'
        release_date_to:
          type: string
          format: date
          example: '1998-01-01'
        countries:
          type: array
          items:
            type: string
            example: CYPRUS
        materials:
          type: array
          items:
            type: string
            example: WOOD
        instrument_ids:
          type: array
          items:
            type: string
            example: '1'
    GetInstrumentByCriteriaPageResponse:
      type: object
      required:
        - content_size
        - contentSize
        - page_size
        - page_number
        - total_elements
        - total_pages
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/InstrumentDetail'
        content_size:
          type: integer
          format: int32
          description: The number of items in the content.
        page_size:
          type: integer
          format: int32
          description: The number of items per page.
        page_number:
          type: integer
          format: int32
          description: The current page number (0-based index).
        total_elements:
          type: integer
          format: int32
          description: The total number of elements across all pages.
        total_pages:
          type: integer
          format: int32
          description: The total number of pages.
    UsernameAndPasswordRequestBody:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    JwtResponse:
      type: object
      required:
        - jwt
      properties:
        jwt:
          type: string
    ProfileDetailsResponse:
      type: object
      required:
        - username
        - role
        - full_name
      properties:
        username:
          type: string
        role:
          type: string
        full_name:
          type: string
    RegistrationRequest:
      type: object
      required:
        - full_name
        - login
        - password
      properties:
        full_name:
          type: string
        login:
          type: string
        password:
          type: string
x-tagGroups:
  - name: Add Favorite
    tags:
      - addFavorite
  - name: List Favorite
    tags:
      - listFavorite
  - name: Remove Favorite
    tags:
      - removeFavorite
  - name: Get Instrument by ID
    tags:
      - getInstrumentById
  - name: Get Instrument Types
    tags:
      - getInstrumentTypes
  - name: Get Instruments by Criteria
    tags:
      - getInstrumentsByCriteria
  - name: Get Instruments by Criteria Paginated
    tags:
      - getInstrumentsByCriteriaPaginated
  - name: Basic Login
    tags:
      - basicLogin
  - name: Get Profile
    tags:
      - getUserProfile
  - name: Register User
    tags:
      - userRegistration
